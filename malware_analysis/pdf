# Malware Analysis - PDF
# Resource https://intezer.com/blog/incident-response/analyze-malicious-pdf-files/
# Lenny Zeltser cheat sheet https://zeltser.com/media/docs/analyzing-malicious-document-files.pdf
# High Level Common workflow
# 0. Extract attachment from an email (.eml) [In cases where you obtained the entire email]
# 00. Hash file and lookup [VirusTotal is your friend] 
# 1. File Identification
# 2. Techniques to identify intereting names inside objects
# 2.a 
# 2.b URI
# 2.c Javascript
#
# MISC
# A. Fix corrupted PDF
# B. Search for URL
#
# Tools mentioned are commonly found in malware analysis linux distro called Remnux 

# 0. Extract attachment from an email with "emldump"
emldump.py {filename}.eml //Identify the section of the email that has the attachment then extract...
emldump.py {filename}.eml -s {1-9} -d > {filename}.vir

# 00. Hash file and lookup on common sandboxes for existing analysis such as VT, Joe Sandbox to speed up your analysis
md5sum {filename}.vir

# 1. File Identification with "File.exe" to validate we are dealing with a PDF and then followed by "pdfid.py" with triage option
file {filename}.vir
pdfid.py -p plugin_triage {filename}.vir

# 2. Identify embedded objects with "peepdf.exe" to have a statistical view of what inside the PDF
peepdf {filename}.vir

# Lookout for /OpenAction, /AA, /Javascript, /Js, /AcroForm, /XFA, /URI, /ObjStm, /Submitform, /XObject

# Use pdf-parser to examine:
pdf-parser -o {1,N} -f -w {filename}.vir //specific location of objects
pdf-parser -s {object_name} {filename}.vir //search for specific object


#MISC
# A. Sometimes extract of PDF is corrupted and hinder analysis, use "pdftk" to repair.
pdftk {original_pdf_name}.pdf output {repaired_pdf_name}.pdf
# B. There are 2 quick ways to find domains/urls in PDF, 1) grep 2) use pdf-parser:
1) grep -rai "http" {name}.pdf
2) pdf-parser -s URI {name}.pdf